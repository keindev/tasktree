name: Build

on:
  push:
    branches:
      - '*'
      - '!main'
  pull_request:
    branches:
      - '*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 16
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js v${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Dependencies
      run: npm ci
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Lint and Test
      run: |
        npm run lint
        npm run test

    - name: Cache coverage
      uses: actions/cache@v3
      with:
        path: coverage
        key: coverage-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('src/**/*.*', '**/package-lock.json') }}

  build:
    name: Build
    needs: [ test ]
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 16
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Dependencies
      run: npm ci
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      run: npm run build

  coverage:
    name: Coverage
    if: ${{ github.event_name == 'push' }}
    needs: [ build ]
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 16
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cache coverage
      id: cache-coverage
      uses: actions/cache@v3
      with:
        path: coverage
        key: coverage-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('src/**/*.*', '**/package-lock.json') }}

    - name: Setup Node.js v${{ env.NODE_VERSION }}
      if: steps.cache-coverage.outputs.cache-hit != 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Test
      if: steps.cache-coverage.outputs.cache-hit != 'true'
      run: |
        npm ci
        npm run test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Send coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info

  status:
    name: Success build
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ test, build, coverage ]
    steps:
      - id: status
        name: Load failure jobs count
        env:
          URL: https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs
          USER: admin:${{ secrets.GITHUB_TOKEN }}
          FILTER: "[.jobs[] | select(.status==\"completed\" and .conclusion==\"failure\") | { status: .conclusion, matrix: .name}] | length"
        run: |
          FAILURE_COUNT=$(curl -X GET -s -u $USER $URL | jq "$FILTER")
          echo "fails=$FAILURE_COUNT" >> $GITHUB_OUTPUT
          echo Failure jobs count: $FAILURE_COUNT

      - if: ${{ steps.status.outputs.fails > 0 }}
        name: Fail
        run: exit 1
